name: CI/CD - Taller Argo MLOps

on:
  push:
    branches:
      - main
    paths:
      - "taller_argo/api/**"
      - "taller_argo/manifests/**"
      - ".github/workflows/ci-cd.yml"
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: penguin-api

jobs:
  build-and-push:
    name: Entrena modelo, construye imagen y sube a Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repo
        uses: actions/checkout@v3

      - name: 🐍 Configura Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Instala dependencias
        working-directory: Niveles/4/api
        run: |
          pip install -r requirements.txt

      - name: 🤖 Entrena modelo
        working-directory: Niveles/4/api
        run: python train_model.py

      - name: 🐳 Login a Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏷 Define versión
        id: version
        run: echo "tag=v${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: 🏗 Construye imagen con modelo entrenado
        working-directory: Niveles/4/api
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }} .

      - name: 🚀 Sube imagen a Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}

      - name: 🔁 (Opcional) Actualiza api-deployment.yaml con nueva imagen
        working-directory: Niveles/4/manifests
        run: |
          sed -i "s|${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:.*|${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}|" api-deployment.yaml

      - name: ✅ Commit si se actualizó api-deployment.yaml
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -am "🔄 Update image tag to ${{ steps.version.outputs.tag }}" || echo "No changes"
          git push
