name: CI/CD - Taller Argo MLOps

on:
  push:
    branches:
      - main
    paths:
      - "taller_argo/api/**"
      - "taller_argo/manifests/**"
      - ".github/workflows/ci-cd.yml"
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: penguin-api

permissions:
  contents: write

jobs:
  build-and-push:
    name: Entrena modelo, construye imagen y sube a Docker Hub
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Verify Git repository
        run: |
          git status || { echo "Not a git repository"; exit 1; }

      - name: Debug Git repository
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          git rev-parse --show-toplevel || echo "Not in a git repository"

      - name: Set up Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}
          git config credential.helper store

      - name: Configura Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instala dependencias
        working-directory: taller_argo/api
        run: |
          pip install -r requirements.txt

      - name: Entrena modelo
        working-directory: taller_argo/api
        run: python train_model.py

      - name: Login a Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Define versiÃ³n
        id: version
        run: echo "tag=v${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Construye imagen con modelo entrenado
        working-directory: taller_argo/api/
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }} .

      - name: Sube imagen a Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}

      - name: Actualiza api-deployment.yaml con nueva imagen
        working-directory: taller_argo/manifests
        run: |
          sed -i "s|image: .*penguin-api:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}|" api-deployment.yaml

      - name: Commit y push del manifiesto actualizado
        env:
          TOKEN: ${{ secrets.GH_PUSH_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git add taller_argo/manifests/api-deployment.yaml
          git commit -m "Update image tag to ${{ steps.version.outputs.tag }}" || echo "No changes to commit"
          git push origin main || { echo "Push failed"; exit 1; }


